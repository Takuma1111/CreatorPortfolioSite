[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/App.tsx":"2","/usr/src/app/src/components/post/PostList.tsx":"3","/usr/src/app/src/components/layouts/CommonLayout.tsx":"4","/usr/src/app/src/components/pages/SignIn.tsx":"5","/usr/src/app/src/components/pages/Top.tsx":"6","/usr/src/app/src/components/pages/SignUp.tsx":"7","/usr/src/app/src/components/pages/Home.tsx":"8","/usr/src/app/src/lib/api/auth.ts":"9","/usr/src/app/src/components/pages/Photos.tsx":"10","/usr/src/app/src/lib/api/posts.ts":"11","/usr/src/app/src/components/post/PostItem.tsx":"12","/usr/src/app/src/components/post/PostForm.tsx":"13","/usr/src/app/src/components/layouts/Header.tsx":"14","/usr/src/app/src/lib/api/client.ts":"15","/usr/src/app/src/lib/api/photos.ts":"16","/usr/src/app/src/components/utils/AlertMessage.tsx":"17","/usr/src/app/src/components/post/PhotoForm.tsx":"18","/usr/src/app/src/components/post/PhotoItem.tsx":"19"},{"size":213,"mtime":1647162318820,"results":"20","hashOfConfig":"21"},{"size":2838,"mtime":1647348443764,"results":"22","hashOfConfig":"21"},{"size":1228,"mtime":1647167660002,"results":"23","hashOfConfig":"21"},{"size":832,"mtime":1647162703414,"results":"24","hashOfConfig":"21"},{"size":4239,"mtime":1648270711898,"results":"25","hashOfConfig":"21"},{"size":4606,"mtime":1647348442212,"results":"26","hashOfConfig":"21"},{"size":4596,"mtime":1647162733412,"results":"27","hashOfConfig":"21"},{"size":588,"mtime":1647275286744,"results":"28","hashOfConfig":"21"},{"size":1103,"mtime":1647850227899,"results":"29","hashOfConfig":"21"},{"size":1978,"mtime":1648273011846,"results":"30","hashOfConfig":"21"},{"size":456,"mtime":1647167648261,"results":"31","hashOfConfig":"21"},{"size":3062,"mtime":1647836643617,"results":"32","hashOfConfig":"21"},{"size":4208,"mtime":1647273442140,"results":"33","hashOfConfig":"21"},{"size":2995,"mtime":1647275780545,"results":"34","hashOfConfig":"21"},{"size":869,"mtime":1647172329035,"results":"35","hashOfConfig":"21"},{"size":550,"mtime":1648272583158,"results":"36","hashOfConfig":"21"},{"size":1156,"mtime":1647162744340,"results":"37","hashOfConfig":"21"},{"size":4353,"mtime":1647847327858,"results":"38","hashOfConfig":"21"},{"size":3070,"mtime":1648272978617,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"v7reiz",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/app/src/index.tsx",[],[],["101","102"],"/usr/src/app/src/App.tsx",[],[],"/usr/src/app/src/components/post/PostList.tsx",[],[],"/usr/src/app/src/components/layouts/CommonLayout.tsx",[],[],"/usr/src/app/src/components/pages/SignIn.tsx",[],[],"/usr/src/app/src/components/pages/Top.tsx",["103","104","105","106","107","108","109","110","111"],[],"import React, { useContext,Fragment } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"App\"\nimport styled from 'styled-components';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\n// images\nimport MainLogo from '../images/logo.png';\nimport MainCoverImage from '../images/main-cover-image.png';\nimport HomeImage from '../../images/restaurant-image.jpg';\n\n\nconst EnhancedSwipeableViews = autoPlay(SwipeableViews);\n\n\n//divタグに対してデザインを指定している \nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding: 8px 32px;\n`;\n\n\nconst MainLogoImage = styled.img`\n  height: 90px;\n`\n\nconst MainCoverImageWrapper = styled.div`\n  text-align: center;\n`;\n\nconst MainCover = styled.img`\n  height: 600px;\n`;\nconst HomesContentsList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 220px;\n  margin-bottom: 150px;\n\n  display: -webkit-flex;\n  -webkit-justify-content: space-between;\n`;\n\nconst HomesContentWrapper = styled.div`\n  width: 450px;\n  height: 300px;\n`;\nconst ExplainContentWrapper = styled.div`\n  width: 450px;\n  height: 300px;\n`;\n\nconst ExplainContentsList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 150px;\n  margin-right: 300px;\n  margin-left: 300px;\n  display: -webkit-flex;\n  -webkit-justify-content: space-between;\n`;\n\nconst ExplainContentsMessageBox = styled.div`\n  background-color: #A9A9A9;\n`;\nconst ExplainContentsMessage = styled.p`\n  color: #FFFFFF;\n  font-size: 20px;\n  line-height: 1.8em;\n`;\nconst ExplainContentsTitle = styled.h1`\n  color: #777777;\n  font-size: 100px;\n`;\n\nconst ExplainContentsSubTitle = styled.h2`\n  color: #404040;\n  font-size: 46px;\n`;\n\nconst SlideImageNode = styled.img`\n  width: 1000px;\n  height: 500px;\n  padding: 48px;\n`;\n\nconst HomesImageNode = styled.img`\n  width: 80%;\n`;\n\nconst MainText = styled.p`\n  color: black;\n  font-size: 18px;\n`;\n\nconst SubText = styled.p`\n  color: black;\n  font-size: 12px;\n`;\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nconst Top: React.FC = () => {\n  const { isSignedIn, currentUser } = useContext(AuthContext)\n\n  return (\n    <>\n      {\n <Fragment>\n\n <MainCoverImageWrapper>\n {/* <EnhancedSwipeableViews enableMouseEvents>\n <SlideImageNode src={HomeImage} />\n <SlideImageNode src={HomeImage} />\n <SlideImageNode src={HomeImage} />\n</EnhancedSwipeableViews> */}\n<ExplainContentsList>\n <ExplainContentWrapper>\n   <ExplainContentsTitle>Creative</ExplainContentsTitle>\n   <ExplainContentsSubTitle>What want you create?</ExplainContentsSubTitle>      \n   <MainText>イラスト・写真・音楽・映像</MainText>\n   <MainText>クリエイターの創作物を感じましょう</MainText>\n </ExplainContentWrapper>\n <ExplainContentWrapper>\n   <ExplainContentsMessageBox>\n     <div style={{ padding: '50px' }}>\n     <ExplainContentsMessage><h2>Photo · Music · Video</h2></ExplainContentsMessage>\n     <ExplainContentsMessage>Let's  post this!</ExplainContentsMessage>\n     <ExplainContentsMessage>I made a site that creators can contribute.\n                  You can post photos, music and videos on this site. Please choose the work you want to post and post. For heavy-sized files, loading of the site is delayed.\n                  The quality is not high, but please enjoy it.</ExplainContentsMessage>\n     </div>\n   </ExplainContentsMessageBox>\n </ExplainContentWrapper>\n</ExplainContentsList>\n </MainCoverImageWrapper>\n\n <HomesContentsList>\n   {\n\n         <Link to={`/photos`} style={{ textDecoration: 'none' }}>\n           <HomesContentWrapper>\n             <HomesImageNode src={HomeImage} />\n             <MainText>サンプルテキスト</MainText>\n             <SubText>サブテキスト</SubText>\n           </HomesContentWrapper>\n         </Link>\n   }\n    {\n         <Link to={`/sounds`} style={{ textDecoration: 'none' }}>\n           <HomesContentWrapper>\n             <HomesImageNode src={HomeImage} />\n             <MainText>サンプルテキスト</MainText>\n             <SubText>サブテキスト</SubText>\n           </HomesContentWrapper>\n         </Link>\n   }\n   {\n         <Link to={`/photos`} style={{ textDecoration: 'none' }}>\n           <HomesContentWrapper>\n             <HomesImageNode src={HomeImage} />\n             <MainText>サンプルテキスト</MainText>\n             <SubText>サブテキスト</SubText>\n           </HomesContentWrapper>\n         </Link>\n   }\n </HomesContentsList>\n \n</Fragment>\n\n      }\n    </>\n    \n  )\n}\n\nexport default Top","/usr/src/app/src/components/pages/SignUp.tsx",[],[],"/usr/src/app/src/components/pages/Home.tsx",[],[],"/usr/src/app/src/lib/api/auth.ts",[],[],"/usr/src/app/src/components/pages/Photos.tsx",["112","113"],[],"/usr/src/app/src/lib/api/posts.ts",[],[],"/usr/src/app/src/components/post/PostItem.tsx",["114"],[],"import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ShareIcon from \"@material-ui/icons/Share\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\nimport styled from 'styled-components';\n\nimport { Post } from \"../../interfaces/index\"\nimport { deletePost } from \"../../lib/api/posts\"\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    width: 220,\n    height: 300, \n    textAlign: \"center\",\n    marginTop: \"2rem\",\n    transition: \"all 0.3s\",\n    \"&:hover\": {\n      boxShadow:\n        \"1px 0px 20px -1px rgba(0,0,0,0.2), 0px 0px 20px 5px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n      transform: \"translateY(-3px)\"\n    }\n  },\n  delete: {\n    marginLeft: \"auto\"\n  }\n}))\n\n\ninterface PostItemProps {\n  post: Post\n  handleGetPosts: Function\n}\n\nconst PostItem = ({ post, handleGetPosts }: PostItemProps) => {\n  const classes = useStyles()\n  const [like, setLike] = useState<boolean>(false)\n\n  const handleDeletePost = async (id: string) => {\n    await deletePost(id)\n    .then(() => {\n      handleGetPosts()\n    })\n  }\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar>\n              U\n            </Avatar>\n          }\n          action={\n            <IconButton>\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"User Name\"\n        />\n        { post.image?.url ?\n          <CardMedia\n            component=\"img\"\n            src={post.image.url}\n            alt=\"post image\"\n          /> : null\n        }\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            { post.content.split(\"\\n\").map((content: string, index: number) => {\n                return (\n                  <p key={index}>{content}</p>\n                )\n              })\n            }\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton onClick={() => like ? setLike(false) : setLike(true)}>\n            { like ? <FavoriteIcon /> : <FavoriteBorderIcon /> }\n          </IconButton>\n          <IconButton>\n            <ShareIcon />\n          </IconButton>\n          <div className={classes.delete}>\n            <IconButton\n              onClick={() => handleDeletePost(post.id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n        </CardActions>\n      </Card>\n    </>\n  )\n}\n\nexport default PostItem","/usr/src/app/src/components/post/PostForm.tsx",[],[],"/usr/src/app/src/components/layouts/Header.tsx",[],[],"/usr/src/app/src/lib/api/client.ts",[],[],"/usr/src/app/src/lib/api/photos.ts",[],[],"/usr/src/app/src/components/utils/AlertMessage.tsx",[],[],"/usr/src/app/src/components/post/PhotoForm.tsx",["115","116"],[],"import React, { useCallback, useState } from \"react\"\n\nimport styled from 'styled-components';\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport Cookies from \"js-cookie\";\n\nimport { createPhoto } from \"../../lib/api/photos\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 320\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}))\n\nconst Input = styled(\"input\")({\n  display: \"none\"\n})\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ninterface PhotoFormProps {\n  handleGetPhotos: Function\n}\n\nconst PhotoForm = ({ handleGetPhotos }: PhotoFormProps) => {\n  const classes = useStyles()\n\n  const [user_id, setUserIds] = useState<string>(\"\")\n  const [name, setName] = useState<string>(\"\")\n  const [text, setText] = useState<string>(\"\")\n  const [url, setUrl] = useState<File>()\n  const [preview, setPreview] = useState<string>(\"\")\n\n  const uploadImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setUrl(file)\n  }, [])\n\n  // プレビュー機能\n  const previewImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setPreview(window.URL.createObjectURL(file))\n  }, [])\n\n  const user_email = Cookies.get(\"_uid\")\n\n  // FormData形式でデータを作成\n  const createFormData = (): FormData => {\n    const formData = new FormData()\n    formData.append(\"name\",name)\n    formData.append(\"text\", text)\n    formData.append(\"user_id\", String(user_email))\n    if (url) formData.append(\"url\", url)\n\n    return formData\n  }\n\n  const handleCreatePhoto  = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n\n    await createPhoto(data)\n    .then(() => {\n      setName(\"\")\n      setText(\"\")\n      setPreview(\"\")\n      setUrl(undefined)\n      handleGetPhotos()\n    })\n  }\n\n  return (\n    <>\n      <form className={classes.form} noValidate onSubmit={handleCreatePhoto}>\n      <TextField\n          placeholder=\"Hello World\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setName(e.target.value)\n          }}\n        />\n        <TextField\n          placeholder=\"Hello World\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={text}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setText(e.target.value)\n          }}\n        />\n        <div className={classes.inputFileBtn}>\n          <label htmlFor=\"icon-button-file\">\n            <Input\n              accept=\"image/*\"\n              id=\"icon-button-file\" \n              type=\"file\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                uploadImage(e)\n                previewImage(e)\n              }}\n            />\n            <IconButton color=\"inherit\" component=\"span\">\n              <PhotoCameraIcon />\n            </IconButton>\n          </label>\n        </div>\n        <div className={classes.submitBtn}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"inherit\"\n            disabled={!text || text.length > 140}\n            className={classes.submitBtn}\n          >\n            Post\n          </Button>\n        </div>\n      </form>\n      { preview ?\n        <Box\n          sx={{ ...borderStyles, borderRadius: 1, borderColor: \"grey.400\" }}\n          className={classes.box}\n        >\n          <IconButton\n            color=\"inherit\"\n            onClick={() => setPreview(\"\")}\n          >\n            <CancelIcon />\n          </IconButton>\n          <img\n            src={preview}\n            alt=\"preview img\"\n            className={classes.preview}\n          />\n        </Box> : null\n      }\n    </>\n  )\n}\n\nexport default PhotoForm","/usr/src/app/src/components/post/PhotoItem.tsx",["117"],[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":22},{"ruleId":"122","severity":1,"message":"127","line":14,"column":7,"nodeType":"124","messageId":"125","endLine":14,"endColumn":29},{"ruleId":"122","severity":1,"message":"128","line":18,"column":7,"nodeType":"124","messageId":"125","endLine":18,"endColumn":20},{"ruleId":"122","severity":1,"message":"129","line":25,"column":7,"nodeType":"124","messageId":"125","endLine":25,"endColumn":20},{"ruleId":"122","severity":1,"message":"130","line":33,"column":7,"nodeType":"124","messageId":"125","endLine":33,"endColumn":16},{"ruleId":"122","severity":1,"message":"131","line":83,"column":7,"nodeType":"124","messageId":"125","endLine":83,"endColumn":21},{"ruleId":"122","severity":1,"message":"132","line":104,"column":11,"nodeType":"124","messageId":"125","endLine":104,"endColumn":21},{"ruleId":"122","severity":1,"message":"133","line":104,"column":23,"nodeType":"124","messageId":"125","endLine":104,"endColumn":34},{"ruleId":"122","severity":1,"message":"134","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":24},{"ruleId":"122","severity":1,"message":"135","line":14,"column":8,"nodeType":"124","messageId":"125","endLine":14,"endColumn":15},{"ruleId":"122","severity":1,"message":"136","line":17,"column":8,"nodeType":"124","messageId":"125","endLine":17,"endColumn":14},{"ruleId":"122","severity":1,"message":"137","line":54,"column":10,"nodeType":"124","messageId":"125","endLine":54,"endColumn":17},{"ruleId":"122","severity":1,"message":"138","line":54,"column":19,"nodeType":"124","messageId":"125","endLine":54,"endColumn":29},{"ruleId":"122","severity":1,"message":"136","line":17,"column":8,"nodeType":"124","messageId":"125","endLine":17,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'MainLogo' is defined but never used.","Identifier","unusedVar","'MainCoverImage' is defined but never used.","'EnhancedSwipeableViews' is assigned a value but never used.","'HeaderWrapper' is assigned a value but never used.","'MainLogoImage' is assigned a value but never used.","'MainCover' is assigned a value but never used.","'SlideImageNode' is assigned a value but never used.","'isSignedIn' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'getCurrentUser' is defined but never used.","'Cookies' is defined but never used.","'styled' is defined but never used.","'user_id' is assigned a value but never used.","'setUserIds' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]