{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  var propValue = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  var warningHint;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element type that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nvar _default = (0, _chainPropTypes.default)(PropTypes.elementType, elementTypeAcceptingRef);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/node_modules/@material-ui/utils/elementTypeAcceptingRef.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","PropTypes","_chainPropTypes","isClassComponent","elementType","_elementType$prototyp","prototype","Boolean","isReactComponent","elementTypeAcceptingRef","props","propName","componentName","location","propFullName","propValue","safePropName","warningHint","undefined","Error","concat","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGN,uBAAuB,CAACD,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,SAASS,gBAAT,CAA0BC,WAA1B,EAAuC;AACrC;AACA,MAAIC,qBAAqB,GAAGD,WAAW,CAACE,SAAxC;AAAA,MACIA,SAAS,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBADxD;AAEA,SAAOE,OAAO,CAACD,SAAS,CAACE,gBAAX,CAAd;AACD;;AAED,SAASC,uBAAT,CAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,aAAlD,EAAiEC,QAAjE,EAA2EC,YAA3E,EAAyF;AACvF,MAAIC,SAAS,GAAGL,KAAK,CAACC,QAAD,CAArB;AACA,MAAIK,YAAY,GAAGF,YAAY,IAAIH,QAAnC;;AAEA,MAAII,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,MAAIE,WAAJ;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAI,OAAOF,SAAP,KAAqB,UAArB,IAAmC,CAACZ,gBAAgB,CAACY,SAAD,CAAxD,EAAqE;AACnEE,IAAAA,WAAW,GAAG,kEAAd;AACD;;AAED,MAAIA,WAAW,KAAKC,SAApB,EAA+B;AAC7B,WAAO,IAAIC,KAAJ,CAAU,WAAWC,MAAX,CAAkBP,QAAlB,EAA4B,IAA5B,EAAkCO,MAAlC,CAAyCJ,YAAzC,EAAuD,iBAAvD,EAA0EI,MAA1E,CAAiFR,aAAjF,EAAgG,KAAhG,IAAyG,iDAAiDQ,MAAjD,CAAwDH,WAAxD,EAAqE,GAArE,CAAzG,GAAqL,2EAA/L,CAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,IAAII,QAAQ,GAAG,CAAC,GAAGnB,eAAe,CAACF,OAApB,EAA6BC,SAAS,CAACG,WAAvC,EAAoDK,uBAApD,CAAf;;AAEAX,OAAO,CAACE,OAAR,GAAkBqB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  var propValue = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  var warningHint;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element type that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nvar _default = (0, _chainPropTypes.default)(PropTypes.elementType, elementTypeAcceptingRef);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}