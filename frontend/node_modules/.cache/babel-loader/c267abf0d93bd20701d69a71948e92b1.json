{"ast":null,"code":"var _jsxFileName = \"/Users/murakami/Rails_React/Creator/frontend/src/components/post/PhotoForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport styled from 'styled-components';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Cookies from \"js-cookie\";\nimport { createPhoto } from \"../../lib/api/photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 320\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}));\nconst Input = styled(\"input\")({\n  display: \"none\"\n});\n_c = Input;\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1\n};\n\nconst PhotoForm = _ref => {\n  _s();\n\n  let {\n    handleGetPhotos\n  } = _ref;\n  const classes = useStyles();\n  const [user_id, setUserIds] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [url, setUrl] = useState();\n  const [preview, setPreview] = useState(\"\");\n  const uploadImage = useCallback(e => {\n    const file = e.target.files[0];\n    setUrl(file);\n  }, []); // プレビュー機能\n\n  const previewImage = useCallback(e => {\n    const file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n  }, []);\n  const user_email = Cookies.get(\"_uid\"); // FormData形式でデータを作成\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"text\", text);\n    formData.append(\"user_id\", String(user_email));\n    if (url) formData.append(\"url\", url);\n    return formData;\n  };\n\n  const handleCreatePhoto = async e => {\n    e.preventDefault();\n    const data = createFormData();\n    await createPhoto(data).then(() => {\n      setName(\"\");\n      setText(\"\");\n      setPreview(\"\");\n      setUrl(undefined);\n      handleGetPhotos();\n    });\n    window.location.href = \"/photos\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleCreatePhoto,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Hello World\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"4\",\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Hello World\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"4\",\n        value: text,\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputFileBtn,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            accept: \"image/*\",\n            id: \"icon-button-file\",\n            type: \"file\",\n            onChange: e => {\n              uploadImage(e);\n              previewImage(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(PhotoCameraIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitBtn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          color: \"inherit\",\n          disabled: !text || text.length > 140,\n          className: classes.submitBtn,\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), preview ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: { ...borderStyles,\n        borderRadius: 1,\n        borderColor: \"grey.400\"\n      },\n      className: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: () => setPreview(\"\"),\n        children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"preview img\",\n        className: classes.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(PhotoForm, \"OB/Z1xN68PHUvjPxyytI5U5gkfI=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = PhotoForm;\nexport default PhotoForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"PhotoForm\");","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/src/components/post/PhotoForm.tsx"],"names":["React","useCallback","useState","styled","makeStyles","TextField","Button","Box","IconButton","PhotoCameraIcon","CancelIcon","Cookies","createPhoto","useStyles","theme","form","display","flexWrap","width","inputFileBtn","marginTop","submitBtn","marginLeft","box","margin","preview","Input","borderStyles","bgcolor","border","PhotoForm","handleGetPhotos","classes","user_id","setUserIds","name","setName","text","setText","url","setUrl","setPreview","uploadImage","e","file","target","files","previewImage","window","URL","createObjectURL","user_email","get","createFormData","formData","FormData","append","String","handleCreatePhoto","preventDefault","data","then","undefined","location","href","value","length","borderRadius","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAAkC,0BAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAIA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,KAAK,EAAE;AAHH,GADwC;AAM9CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GANgC;AAS9CC,EAAAA,SAAS,EAAE;AACTD,IAAAA,SAAS,EAAE,MADF;AAETE,IAAAA,UAAU,EAAE;AAFH,GATmC;AAa9CC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,aADL;AAEHN,IAAAA,KAAK,EAAE;AAFJ,GAbyC;AAiB9CO,EAAAA,OAAO,EAAE;AACPP,IAAAA,KAAK,EAAE;AADA;AAjBqC,CAAnB,CAAD,CAA5B;AAsBA,MAAMQ,KAAK,GAAGvB,MAAM,CAAC,OAAD,CAAN,CAAgB;AAC5Ba,EAAAA,OAAO,EAAE;AADmB,CAAhB,CAAd;KAAMU,K;AAIN,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,kBADU;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAWA,MAAMC,SAAS,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA;AAAF,GAAwC;AACzD,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AAEA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACiC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACqC,GAAD,EAAMC,MAAN,IAAgBtC,QAAQ,EAA9B;AACA,QAAM,CAACuB,OAAD,EAAUgB,UAAV,IAAwBvC,QAAQ,CAAS,EAAT,CAAtC;AAIA,QAAMwC,WAAW,GAAGzC,WAAW,CAAE0C,CAAD,IAAO;AACrC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAN,IAAAA,MAAM,CAACI,IAAD,CAAN;AACD,GAH8B,EAG5B,EAH4B,CAA/B,CAXyD,CAgBzD;;AACA,QAAMG,YAAY,GAAG9C,WAAW,CAAE0C,CAAD,IAAO;AACtC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAL,IAAAA,UAAU,CAACO,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CAAD,CAAV;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,QAAMO,UAAU,GAAGxC,OAAO,CAACyC,GAAR,CAAY,MAAZ,CAAnB,CAtByD,CAwBzD;;AACA,QAAMC,cAAc,GAAG,MAAgB;AACrC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBrB,IAAvB;AACAmB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBnB,IAAxB;AACAiB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BC,MAAM,CAACN,UAAD,CAAjC;AACA,QAAIZ,GAAJ,EAASe,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBjB,GAAvB;AAET,WAAOe,QAAP;AACD,GARD;;AAUA,QAAMI,iBAAiB,GAAI,MAAOf,CAAP,IAA+C;AACxEA,IAAAA,CAAC,CAACgB,cAAF;AAEA,UAAMC,IAAI,GAAGP,cAAc,EAA3B;AACA,UAAMzC,WAAW,CAACgD,IAAD,CAAX,CACLC,IADK,CACA,MAAM;AACVzB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAD,MAAAA,MAAM,CAACsB,SAAD,CAAN;AACA/B,MAAAA,eAAe;AAChB,KAPK,CAAN;AAQAiB,IAAAA,MAAM,CAACe,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AAED,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEhC,OAAO,CAACjB,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,QAAQ,EAAE2C,iBAApD;AAAA,8BACA,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,aADhB;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,IAAI,EAAC,GALT;AAMI,QAAA,KAAK,EAAEvB,IANX;AAOI,QAAA,QAAQ,EAAGQ,CAAD,IAA4C;AACpDP,UAAAA,OAAO,CAACO,CAAC,CAACE,MAAF,CAASoB,KAAV,CAAP;AACD;AATL;AAAA;AAAA;AAAA;AAAA,cADA,eAYE,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,IAAI,EAAC,GALP;AAME,QAAA,KAAK,EAAE5B,IANT;AAOE,QAAA,QAAQ,EAAGM,CAAD,IAA4C;AACpDL,UAAAA,OAAO,CAACK,CAAC,CAACE,MAAF,CAASoB,KAAV,CAAP;AACD;AATH;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAK,QAAA,SAAS,EAAEjC,OAAO,CAACb,YAAxB;AAAA,+BACE;AAAO,UAAA,OAAO,EAAC,kBAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,MAAM,EAAC,SADT;AAEE,YAAA,EAAE,EAAC,kBAFL;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,QAAQ,EAAGwB,CAAD,IAA4C;AACpDD,cAAAA,WAAW,CAACC,CAAD,CAAX;AACAI,cAAAA,YAAY,CAACJ,CAAD,CAAZ;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,SAAS,EAAC,MAAtC;AAAA,mCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvBF,eAuCE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACX,SAAxB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,QAAQ,EAAE,CAACgB,IAAD,IAASA,IAAI,CAAC6B,MAAL,GAAc,GALnC;AAME,UAAA,SAAS,EAAElC,OAAO,CAACX,SANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAqDII,OAAO,gBACP,QAAC,GAAD;AACE,MAAA,EAAE,EAAE,EAAE,GAAGE,YAAL;AAAmBwC,QAAAA,YAAY,EAAE,CAAjC;AAAoCC,QAAAA,WAAW,EAAE;AAAjD,OADN;AAEE,MAAA,SAAS,EAAEpC,OAAO,CAACT,GAFrB;AAAA,8BAIE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,MAAMkB,UAAU,CAAC,EAAD,CAF3B;AAAA,+BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AACE,QAAA,GAAG,EAAEhB,OADP;AAEE,QAAA,GAAG,EAAC,aAFN;AAGE,QAAA,SAAS,EAAEO,OAAO,CAACP;AAHrB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,GAgBE,IArEb;AAAA,kBADF;AA0ED,CA7HD;;GAAMK,S;UACYjB,S;;;MADZiB,S;AA+HN,eAAeA,SAAf","sourcesContent":["import React, { useCallback, useState } from \"react\"\n\nimport styled from 'styled-components';\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport Cookies from \"js-cookie\";\nimport { Link } from \"react-router-dom\";\n\n\nimport { createPhoto } from \"../../lib/api/photos\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 320\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}))\n\nconst Input = styled(\"input\")({\n  display: \"none\"\n})\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ninterface PhotoFormProps {\n  handleGetPhotos: Function\n}\n\n\n\nconst PhotoForm = ({ handleGetPhotos }: PhotoFormProps) => {\n  const classes = useStyles()\n\n  const [user_id, setUserIds] = useState<string>(\"\")\n  const [name, setName] = useState<string>(\"\")\n  const [text, setText] = useState<string>(\"\")\n  const [url, setUrl] = useState<File>()\n  const [preview, setPreview] = useState<string>(\"\")\n\n\n\n  const uploadImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setUrl(file)\n  }, [])\n\n  // プレビュー機能\n  const previewImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setPreview(window.URL.createObjectURL(file))\n  }, [])\n\n  const user_email = Cookies.get(\"_uid\")\n\n  // FormData形式でデータを作成\n  const createFormData = (): FormData => {\n    const formData = new FormData()\n    formData.append(\"name\",name)\n    formData.append(\"text\", text)\n    formData.append(\"user_id\", String(user_email))\n    if (url) formData.append(\"url\", url)\n\n    return formData\n  }\n\n  const handleCreatePhoto  = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n    await createPhoto(data)\n    .then(() => {\n      setName(\"\")\n      setText(\"\")\n      setPreview(\"\")\n      setUrl(undefined)\n      handleGetPhotos()\n    })\n    window.location.href = \"/photos\";\n\n  }\n\n  return (\n    <>\n      <form className={classes.form} noValidate onSubmit={handleCreatePhoto}>\n      <TextField\n          placeholder=\"Hello World\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setName(e.target.value)\n          }}\n        />\n        <TextField\n          placeholder=\"Hello World\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={text}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setText(e.target.value)\n          }}\n        />\n        <div className={classes.inputFileBtn}>\n          <label htmlFor=\"icon-button-file\">\n            <Input\n              accept=\"image/*\"\n              id=\"icon-button-file\" \n              type=\"file\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                uploadImage(e)\n                previewImage(e)\n              }}\n            />\n            <IconButton color=\"inherit\" component=\"span\">\n              <PhotoCameraIcon />\n            </IconButton>\n          </label>\n        </div>\n        <div className={classes.submitBtn}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"inherit\"\n            disabled={!text || text.length > 140}\n            className={classes.submitBtn} \n          >\n            POST\n          </Button>\n        </div>\n      </form>\n      { preview ?\n        <Box\n          sx={{ ...borderStyles, borderRadius: 1, borderColor: \"grey.400\" }}\n          className={classes.box}\n        >\n          <IconButton\n            color=\"inherit\"\n            onClick={() => setPreview(\"\")}\n          >\n            <CancelIcon />\n          </IconButton>\n          <img\n            src={preview}\n            alt=\"preview img\"\n            className={classes.preview}\n          />\n        </Box> : null\n      }\n    </>\n  )\n}\n\nexport default PhotoForm"]},"metadata":{},"sourceType":"module"}