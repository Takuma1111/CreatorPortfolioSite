{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\n  var element = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (element == null) {\n    return null;\n  }\n\n  var warningHint;\n  var elementType = element.type;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nvar elementAcceptingRef = (0, _chainPropTypes.default)(_propTypes.default.element, acceptingRef);\nelementAcceptingRef.isRequired = (0, _chainPropTypes.default)(_propTypes.default.element.isRequired, acceptingRef);\nvar _default = elementAcceptingRef;\nexports.default = _default;","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/node_modules/@material-ui/utils/elementAcceptingRef.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_propTypes","_chainPropTypes","isClassComponent","elementType","_elementType$prototyp","prototype","Boolean","isReactComponent","acceptingRef","props","propName","componentName","location","propFullName","element","safePropName","warningHint","type","undefined","Error","concat","elementAcceptingRef","isRequired","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,SAASQ,gBAAT,CAA0BC,WAA1B,EAAuC;AACrC;AACA,MAAIC,qBAAqB,GAAGD,WAAW,CAACE,SAAxC;AAAA,MACIA,SAAS,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBADxD;AAEA,SAAOE,OAAO,CAACD,SAAS,CAACE,gBAAX,CAAd;AACD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,aAAvC,EAAsDC,QAAtD,EAAgEC,YAAhE,EAA8E;AAC5E,MAAIC,OAAO,GAAGL,KAAK,CAACC,QAAD,CAAnB;AACA,MAAIK,YAAY,GAAGF,YAAY,IAAIH,QAAnC;;AAEA,MAAII,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,MAAIE,WAAJ;AACA,MAAIb,WAAW,GAAGW,OAAO,CAACG,IAA1B;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAI,OAAOd,WAAP,KAAuB,UAAvB,IAAqC,CAACD,gBAAgB,CAACC,WAAD,CAA1D,EAAyE;AACvEa,IAAAA,WAAW,GAAG,6EAAd;AACD;;AAED,MAAIA,WAAW,KAAKE,SAApB,EAA+B;AAC7B,WAAO,IAAIC,KAAJ,CAAU,WAAWC,MAAX,CAAkBR,QAAlB,EAA4B,IAA5B,EAAkCQ,MAAlC,CAAyCL,YAAzC,EAAuD,iBAAvD,EAA0EK,MAA1E,CAAiFT,aAAjF,EAAgG,KAAhG,IAAyG,4CAA4CS,MAA5C,CAAmDJ,WAAnD,EAAgE,GAAhE,CAAzG,GAAgL,2EAA1L,CAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,IAAIK,mBAAmB,GAAG,CAAC,GAAGpB,eAAe,CAACF,OAApB,EAA6BC,UAAU,CAACD,OAAX,CAAmBe,OAAhD,EAAyDN,YAAzD,CAA1B;AACAa,mBAAmB,CAACC,UAApB,GAAiC,CAAC,GAAGrB,eAAe,CAACF,OAApB,EAA6BC,UAAU,CAACD,OAAX,CAAmBe,OAAnB,CAA2BQ,UAAxD,EAAoEd,YAApE,CAAjC;AACA,IAAIe,QAAQ,GAAGF,mBAAf;AACAxB,OAAO,CAACE,OAAR,GAAkBwB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\n  var element = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (element == null) {\n    return null;\n  }\n\n  var warningHint;\n  var elementType = element.type;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nvar elementAcceptingRef = (0, _chainPropTypes.default)(_propTypes.default.element, acceptingRef);\nelementAcceptingRef.isRequired = (0, _chainPropTypes.default)(_propTypes.default.element.isRequired, acceptingRef);\nvar _default = elementAcceptingRef;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}