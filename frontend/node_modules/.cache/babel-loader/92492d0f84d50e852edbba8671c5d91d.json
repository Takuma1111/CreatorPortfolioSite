{"ast":null,"code":"import applyCaseMiddleware from \"axios-case-converter\"; // import axios from \"axios\"\n\nimport axios from \"axios\"; // applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n// ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\n\nconst options = {\n  ignoreHeaders: true\n};\nconst client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n\n  }\n}), options);\nclient.interceptors.response.use(response => {\n  const data = response.data;\n  return { ...response.data,\n    data\n  };\n}); // export default client","map":{"version":3,"sources":["/usr/src/app/src/lib/api/client.ts"],"names":["applyCaseMiddleware","axios","options","ignoreHeaders","client","create","baseURL","headers","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,sBAAhC,C,CACA;;AACA,OAAOC,KAAP,MAAqD,OAArD,C,CAGA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAE;AADD,CAAhB;AAIA,MAAMC,MAAM,GAAGJ,mBAAmB,CAACC,KAAK,CAACI,MAAN,CAAa;AAC9CC,EAAAA,OAAO,EAAE,8BADqC;AAE9CC,EAAAA,OAAO,EAAE;AACP,oBAAgB,qBADT,CAC+B;;AAD/B;AAFqC,CAAb,CAAD,EAK9BL,OAL8B,CAAlC;AAQAE,MAAM,CAACI,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACKD,QAAD,IAA4C;AACxC,QAAME,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,SAAO,EAAE,GAAGF,QAAQ,CAACE,IAAd;AAAoBA,IAAAA;AAApB,GAAP;AACH,CAJL,E,CAMA","sourcesContent":["import applyCaseMiddleware from \"axios-case-converter\"\n// import axios from \"axios\"\nimport axios, { AxiosInstance, AxiosResponse }  from \"axios\"\n\n\n// applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n// ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\nconst options = {\n  ignoreHeaders: true \n}\n\nconst client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n  }\n}), options)\n\n\nclient.interceptors.response.use(\n    (response: AxiosResponse): AxiosResponse => {\n        const data = response.data\n        return { ...response.data, data }\n    }\n)\n// export default client"]},"metadata":{},"sourceType":"module"}