{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HTMLElementType;\n\nfunction HTMLElementType(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propValue = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  if (propValue && propValue.nodeType !== 1) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an HTMLElement.\");\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/node_modules/@material-ui/utils/HTMLElementType.js"],"names":["Object","defineProperty","exports","value","default","HTMLElementType","props","propName","componentName","location","propFullName","process","env","NODE_ENV","propValue","safePropName","nodeType","Error","concat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,eAAlB;;AAEA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,aAA1C,EAAyDC,QAAzD,EAAmEC,YAAnE,EAAiF;AAC/E,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,WAAO,IAAP;AACD;;AAED,MAAIC,SAAS,GAAGR,KAAK,CAACC,QAAD,CAArB;AACA,MAAIQ,YAAY,GAAGL,YAAY,IAAIH,QAAnC;;AAEA,MAAIO,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,MAAIA,SAAS,IAAIA,SAAS,CAACE,QAAV,KAAuB,CAAxC,EAA2C;AACzC,WAAO,IAAIC,KAAJ,CAAU,WAAWC,MAAX,CAAkBT,QAAlB,EAA4B,IAA5B,EAAkCS,MAAlC,CAAyCH,YAAzC,EAAuD,iBAAvD,EAA0EG,MAA1E,CAAiFV,aAAjF,EAAgG,KAAhG,IAAyG,0BAAnH,CAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HTMLElementType;\n\nfunction HTMLElementType(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  var propValue = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  if (propValue && propValue.nodeType !== 1) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an HTMLElement.\");\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"script"}