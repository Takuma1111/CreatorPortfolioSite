{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPlainObject = isPlainObject;\nexports.default = deepmerge;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nfunction isPlainObject(item) {\n  return item && (0, _typeof2.default)(item) === 'object' && item.constructor === Object;\n}\n\nfunction deepmerge(target, source) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  var output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target) {\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/node_modules/@material-ui/utils/deepmerge.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","isPlainObject","default","deepmerge","_extends2","_typeof2","item","constructor","target","source","options","arguments","length","undefined","clone","output","keys","forEach","key"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACG,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIS,QAAQ,GAAGV,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAArC;;AAEA,SAASK,aAAT,CAAuBK,IAAvB,EAA6B;AAC3B,SAAOA,IAAI,IAAI,CAAC,GAAGD,QAAQ,CAACH,OAAb,EAAsBI,IAAtB,MAAgC,QAAxC,IAAoDA,IAAI,CAACC,WAAL,KAAqBV,MAAhF;AACD;;AAED,SAASM,SAAT,CAAmBK,MAAnB,EAA2BC,MAA3B,EAAmC;AACjC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAChFG,IAAAA,KAAK,EAAE;AADyE,GAAlF;AAGA,MAAIC,MAAM,GAAGL,OAAO,CAACI,KAAR,GAAgB,CAAC,GAAGV,SAAS,CAACF,OAAd,EAAuB,EAAvB,EAA2BM,MAA3B,CAAhB,GAAqDA,MAAlE;;AAEA,MAAIP,aAAa,CAACO,MAAD,CAAb,IAAyBP,aAAa,CAACQ,MAAD,CAA1C,EAAoD;AAClDZ,IAAAA,MAAM,CAACmB,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4B,UAAUC,GAAV,EAAe;AACzC;AACA,UAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB;AACD;;AAED,UAAIjB,aAAa,CAACQ,MAAM,CAACS,GAAD,CAAP,CAAb,IAA8BA,GAAG,IAAIV,MAAzC,EAAiD;AAC/CO,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcf,SAAS,CAACK,MAAM,CAACU,GAAD,CAAP,EAAcT,MAAM,CAACS,GAAD,CAApB,EAA2BR,OAA3B,CAAvB;AACD,OAFD,MAEO;AACLK,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcT,MAAM,CAACS,GAAD,CAApB;AACD;AACF,KAXD;AAYD;;AAED,SAAOH,MAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPlainObject = isPlainObject;\nexports.default = deepmerge;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nfunction isPlainObject(item) {\n  return item && (0, _typeof2.default)(item) === 'object' && item.constructor === Object;\n}\n\nfunction deepmerge(target, source) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  var output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target) {\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}"]},"metadata":{},"sourceType":"script"}