{"ast":null,"code":"// import applyCaseMiddleware from \"axios-case-converter\"\n// import axios from \"axios\"\n// // applyCaseMiddleware:\n// // axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// // または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n// // ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\n// const options = {\n//   ignoreHeaders: true \n// }\n// const client = applyCaseMiddleware(axios.create({\n//   baseURL: \"http://localhost:3001/api/v1\"\n// }), options)\n// export default client\nimport axios from \"axios\";\nlet client;\nexport default client = axios.create({\n  baseURL: \"http://localhost:3001/api/v1\"\n}); // export default client =  axios.create({\n//     baseURL: \"http://localhost:3001/api/v1\",\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n//     }\n//   })\n\nclient.interceptors.response.use(response => {\n  const data = response.data;\n  return { ...response.data,\n    data\n  };\n});","map":{"version":3,"sources":["/usr/src/app/src/lib/api/client.ts"],"names":["axios","client","create","baseURL","interceptors","response","use","data"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAqD,OAArD;AAEA,IAAIC,MAAJ;AAEA,eAAeA,MAAM,GAAID,KAAK,CAACE,MAAN,CAAa;AACpCC,EAAAA,OAAO,EAAE;AAD2B,CAAb,CAAzB,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AAEAF,MAAM,CAACG,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACGD,QAAD,IAA4C;AACxC,QAAME,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,SAAO,EAAE,GAAGF,QAAQ,CAACE,IAAd;AAAoBA,IAAAA;AAApB,GAAP;AACH,CAJH","sourcesContent":["// import applyCaseMiddleware from \"axios-case-converter\"\n// import axios from \"axios\"\n\n// // applyCaseMiddleware:\n// // axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// // または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n// // ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\n// const options = {\n//   ignoreHeaders: true \n// }\n\n// const client = applyCaseMiddleware(axios.create({\n//   baseURL: \"http://localhost:3001/api/v1\"\n// }), options)\n\n// export default client\n\nimport axios, { AxiosInstance, AxiosResponse }  from \"axios\"\n\nlet client: AxiosInstance\n\nexport default client =  axios.create({\n  baseURL: \"http://localhost:3001/api/v1\"\n})\n\n// export default client =  axios.create({\n//     baseURL: \"http://localhost:3001/api/v1\",\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n//     }\n//   })\n\nclient.interceptors.response.use(\n  (response: AxiosResponse): AxiosResponse => {\n      const data = response.data\n      return { ...response.data, data }\n  }\n)"]},"metadata":{},"sourceType":"module"}