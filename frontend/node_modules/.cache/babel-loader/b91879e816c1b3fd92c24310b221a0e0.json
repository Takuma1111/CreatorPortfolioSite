{"ast":null,"code":"var _jsxFileName = \"/Users/murakami/Rails_React/Creator/frontend/src/components/pages/PhotoShow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PhotoForm from \"../post/PhotoForm\";\nimport { findPhotos } from \"../../lib/api/photos\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesContentsList = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  height: 30%;\n  width: 70%;\n`;\n_c = MoviesContentsList;\nconst Box = styled.div`\n  padding: 0.5em 1em;\n  margin: 2em 0;\n  color: #777777;\n  background: white;\n  border-top: solid 5px #777777;\n  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.22);\n`;\nconst useStyles = makeStyles(() => ({\n  container: {\n    textAlign: \"center\",\n    marginTop: \"3rem\"\n  }\n}));\nexport const PhotoShow = props => {\n  _s();\n\n  const classes = useStyles();\n  const [photos, setPhotos] = useState();\n  var receiveJSON;\n  var jsonGet;\n\n  const handleFindPhotos = async () => {\n    const {\n      data\n    } = await findPhotos(props.match.params.id);\n    console.log(\"検索したデータ\");\n    console.log(data); // setPhotos(data)\n\n    receiveJSON = {\n      id: data.id,\n      userId: data.userId,\n      name: String(data.name),\n      text: String(data.text),\n      url: {\n        url: String(data.url)\n      }\n    };\n    setPhotos(receiveJSON);\n    jsonGet = JSON.parse(data);\n    console.log(\"挿入した後のデータ\");\n    console.log(jsonGet);\n    console.log(\"挿入し終わったデータ\");\n  };\n\n  useEffect(() => {\n    handleFindPhotos();\n  }, []);\n\n  const isValid = model => {\n    if (model === null) {\n      console.log(\"NULLだった\");\n      return false;\n    }\n\n    if (model.name == \"\") {\n      console.log(\"nameは空文字だった\");\n    } else if (model.name == null) {\n      console.log(\"nameはNULLだった\");\n    } else {\n      console.log(\"nameに値が入っていた\");\n      console.log(model.name);\n    }\n\n    return true;\n  }; //   const mapIndex = photos.map((value, index) => {\n  //     return index;\n  //   })\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(PhotoForm, {\n          handleGetPhotos: handleFindPhotos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesContentsList, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"aaa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: props.match.params.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"bbb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), console.log(\"オブジェクトの中身\"), console.log(photos), console.log(isValid)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoShow, \"DjiBSj421sPWJ/8sLjPniFQeGn8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = PhotoShow;\nexport default PhotoShow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MoviesContentsList\");\n$RefreshReg$(_c2, \"PhotoShow\");","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/src/components/pages/PhotoShow.tsx"],"names":["React","useEffect","useState","Container","Grid","makeStyles","PhotoForm","findPhotos","styled","MoviesContentsList","div","Box","useStyles","container","textAlign","marginTop","PhotoShow","props","classes","photos","setPhotos","receiveJSON","jsonGet","handleFindPhotos","data","match","params","id","console","log","userId","name","String","text","url","JSON","parse","isValid","model"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;AAMA,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,kB;AASN,MAAME,GAAG,GAAGH,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAME,SAAS,GAAGP,UAAU,CAAC,OAAO;AAClCQ,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,SAAS,EAAE;AAFF;AADuB,CAAP,CAAD,CAA5B;AAcA,OAAO,MAAMC,SAAS,GAAKC,KAAD,IAAkB;AAAA;;AAE1C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,EAApC;AACA,MAAImB,WAAJ;AACA,MAAIC,OAAJ;;AACA,QAAMC,gBAAgB,GAAG,YAAY;AACnC,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAMjB,UAAU,CAACU,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAHmC,CAKnC;;AACAH,IAAAA,WAAW,GAAG;AAACM,MAAAA,EAAE,EAAEH,IAAI,CAACG,EAAV;AAAaG,MAAAA,MAAM,EAACN,IAAI,CAACM,MAAzB;AAAgCC,MAAAA,IAAI,EAACC,MAAM,CAACR,IAAI,CAACO,IAAN,CAA3C;AAAwDE,MAAAA,IAAI,EAACD,MAAM,CAACR,IAAI,CAACS,IAAN,CAAnE;AAA+EC,MAAAA,GAAG,EAAC;AAACA,QAAAA,GAAG,EAAEF,MAAM,CAACR,IAAI,CAACU,GAAN;AAAZ;AAAnF,KAAd;AACAd,IAAAA,SAAS,CAACC,WAAD,CAAT;AACAC,IAAAA,OAAO,GAAGa,IAAI,CAACC,KAAL,CAAWZ,IAAX,CAAV;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAZD;;AAcA5B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMc,OAAO,GAAIC,KAAD,IAAkB;AAChC,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAO,KAAP;AACH;;AAED,QAAGS,KAAK,CAACP,IAAN,IAAc,EAAjB,EAAqB;AACjBH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAFD,MAEM,IAAGS,KAAK,CAACP,IAAN,IAAc,IAAjB,EAAsB;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAFK,MAED;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACP,IAAlB;AACH;;AAED,WAAO,IAAP;AACH,GAhBC,CAxB0C,CA0C5C;AACA;AACA;;;AACE,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEb,OAAO,CAACL,SAA5C;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,cAAc,EAAC,QAA/C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,eAAe,EAAEU;AADnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAII,QAAC,kBAAD;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKN,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAKCC,OAAO,CAACC,GAAR,CAAY,WAAZ,CALD,EAMCD,OAAO,CAACC,GAAR,CAAYV,MAAZ,CAND,EAOCS,OAAO,CAACC,GAAR,CAAYQ,OAAZ,CAPD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA3EM;;GAAMrB,S;UAEKJ,S;;;MAFLI,S;AA6Eb,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Container, Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PhotoForm from \"../post/PhotoForm\"\nimport PhotoItem from \"../post/PhotoItem\"\nimport { findPhotos } from \"../../lib/api/photos\"\nimport { getCurrentUser } from \"../../lib/api/auth\"\nimport { Photo } from \"../../interfaces/index\"\nimport styled from 'styled-components';\nimport Cookies from \"js-cookie\";\nimport { Link,RouteComponentProps } from \"react-router-dom\";\n\ninterface Props extends RouteComponentProps<{ id: string }>{}\n\nconst MoviesContentsList = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  height: 30%;\n  width: 70%;\n`;\n\nconst Box = styled.div`\n  padding: 0.5em 1em;\n  margin: 2em 0;\n  color: #777777;\n  background: white;\n  border-top: solid 5px #777777;\n  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.22);\n`;\nconst useStyles = makeStyles(() => ({\n  container: {\n    textAlign: \"center\",\n    marginTop: \"3rem\"\n  }\n}))\n\n\n\ninterface PhotoItemProps {\n    photo: Photo\n    handleGetPhotos: Function\n  }\n  \nexport const PhotoShow  = (props: Props) => {\n\n  const classes = useStyles()\n  const [photos, setPhotos] = useState<Photo>()\n  var receiveJSON:Photo;\n  var jsonGet;\n  const handleFindPhotos = async () => {\n    const { data }  = await findPhotos(props.match.params.id)\n    console.log(\"検索したデータ\")\n    console.log(data)\n\n    // setPhotos(data)\n    receiveJSON = {id: data.id,userId:data.userId,name:String(data.name), text:String(data.text),url:{url: String(data.url)}};\n    setPhotos(receiveJSON)\n    jsonGet = JSON.parse(data)\n    console.log(\"挿入した後のデータ\")\n    console.log(jsonGet)\n    console.log(\"挿入し終わったデータ\")\n  }\n\n  useEffect(() => {\n    handleFindPhotos()\n  }, [])\n\n  const isValid = (model: Photo) => {\n    if (model === null) {\n        console.log(\"NULLだった\")\n        return false;\n    }\n    \n    if(model.name == \"\" ){\n        console.log(\"nameは空文字だった\")\n    }else if(model.name == null){\n        console.log(\"nameはNULLだった\")\n    }else{\n        console.log(\"nameに値が入っていた\")\n        console.log(model.name)\n    }\n\n    return true;\n};\n\n//   const mapIndex = photos.map((value, index) => {\n//     return index;\n//   })\n  return (\n    <Container maxWidth=\"lg\" className={classes.container} >\n      <Grid container direction=\"row\" justifyContent=\"center\">\n        <Grid item>\n          <PhotoForm\n            handleGetPhotos={handleFindPhotos}\n          />\n            <MoviesContentsList>\n            <h1>aaa</h1>\n            <h1>{props.match.params.id}</h1>\n            <h1>bbb</h1>  \n            {/* <h1>{receiveJSON.name}</h1> */}\n            {console.log(\"オブジェクトの中身\")}\n            {console.log(photos)}\n            {console.log(isValid)}\n       \n\n\n            {/* { photos?.map((photo: Photo) => {\n                return (\n                    <Box>\n                            <h1>{photo.name}+\"aaa\"</h1>\n                    </Box>\n                )}\n            )} */}\n            </MoviesContentsList>            \n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default PhotoShow"]},"metadata":{},"sourceType":"module"}