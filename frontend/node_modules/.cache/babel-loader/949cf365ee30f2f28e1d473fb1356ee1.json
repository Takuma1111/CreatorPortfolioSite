{"ast":null,"code":"var _jsxFileName = \"/Users/murakami/Rails_React/Creator/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport CommonLayout from \"components/layouts/CommonLayout\";\nimport Home from \"components/pages/Home\";\nimport SignUp from \"components/pages/SignUp\";\nimport SignIn from \"components/pages/SignIn\";\nimport Top from \"components/pages/Top\";\nimport Photo from \"components/pages/Photos\";\nimport PhotoShow from \"components/pages/PhotoShow\";\nimport PhotoPost from \"components/pages/PhotoPost\";\nimport Footer from \"components/layouts/Footer\";\nimport Movie from \"components/pages/Movies\";\nimport MovieShow from \"components/pages/MovieShow\";\nimport MoviePost from \"components/pages/MoviePost\";\nimport Sound from \"components/pages/Sounds\";\nimport SoundShow from \"components/pages/SoundShow\";\nimport SoundPost from \"components/pages/SoundPost\";\nimport { getCurrentUser } from \"lib/api/auth\";\nimport PostList from \"./components/post/PostList\"; // グローバルで扱う変数・関数\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(); // 認証済みのユーザーがいるかどうかチェック\n  // 確認できた場合はそのユーザーの情報を取得\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isLogin) === true) {\n        setIsSignedIn(true);\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.data);\n        console.log(res === null || res === void 0 ? void 0 : res.data.data);\n      } else {\n        console.log(\"No current user\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]); // ユーザーが認証済みかどうかでルーティングを決定\n  // 未認証だった場合は「/signin」ページに促す\n\n  const Private = _ref => {\n    let {\n      children\n    } = _ref;\n\n    if (!loading) {\n      if (isSignedIn) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        loading,\n        setLoading,\n        isSignedIn,\n        setIsSignedIn,\n        currentUser,\n        setCurrentUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(CommonLayout, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signin\",\n            component: SignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/posts\",\n            component: PostList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/photos\",\n            component: Photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/photo/post\",\n            component: PhotoPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/photos/:id\",\n            component: PhotoShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/movies\",\n            component: Movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/movies/:id\",\n            component: MovieShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/movie/post\",\n            component: MoviePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sounds\",\n            component: Sound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sounds/:id\",\n            component: SoundShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/sound/post\",\n            component: SoundPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/top\",\n            component: Top\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Private, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/home\",\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MRvxv/wPOvGiX4YVo79MnhJQeh0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/murakami/Rails_React/Creator/frontend/src/App.tsx"],"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Switch","Route","Redirect","CommonLayout","Home","SignUp","SignIn","Top","Photo","PhotoShow","PhotoPost","Footer","Movie","MovieShow","MoviePost","Sound","SoundShow","SoundPost","getCurrentUser","PostList","AuthContext","App","loading","setLoading","isSignedIn","setIsSignedIn","currentUser","setCurrentUser","handleGetCurrentUser","res","data","isLogin","console","log","err","Private","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport CommonLayout from \"components/layouts/CommonLayout\"\nimport Home from \"components/pages/Home\"\nimport SignUp from \"components/pages/SignUp\"\nimport SignIn from \"components/pages/SignIn\"\nimport Top from \"components/pages/Top\"\nimport Photo from \"components/pages/Photos\"\nimport PhotoShow from \"components/pages/PhotoShow\"\nimport PhotoPost from \"components/pages/PhotoPost\"\nimport Footer from \"components/layouts/Footer\"\n\nimport Movie from \"components/pages/Movies\"\nimport MovieShow from \"components/pages/MovieShow\"\nimport MoviePost from \"components/pages/MoviePost\"\n\nimport Sound from \"components/pages/Sounds\"\nimport SoundShow from \"components/pages/SoundShow\"\nimport SoundPost from \"components/pages/SoundPost\"\n\nimport { getCurrentUser } from \"lib/api/auth\"\nimport { User } from \"interfaces/index\"\n\nimport PostList from \"./components/post/PostList\"\n\n// グローバルで扱う変数・関数\nexport const AuthContext = createContext({} as {\n  loading: boolean\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>\n  isSignedIn: boolean\n  setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>\n  currentUser: User | undefined\n  setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>\n})\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false)\n  const [currentUser, setCurrentUser] = useState<User | undefined>()\n\n  // 認証済みのユーザーがいるかどうかチェック\n  // 確認できた場合はそのユーザーの情報を取得\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser()\n\n      if (res?.data.isLogin === true) {\n        setIsSignedIn(true)\n        setCurrentUser(res?.data.data)\n\n        console.log(res?.data.data)\n      } else {\n        console.log(\"No current user\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    handleGetCurrentUser()\n  }, [setCurrentUser])\n\n\n  // ユーザーが認証済みかどうかでルーティングを決定\n  // 未認証だった場合は「/signin」ページに促す\n  const Private = ({ children }: { children: React.ReactElement }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return   <Redirect to=\"/top\" />\n      } else {\n        return <Redirect to=\"/signin\" />\n      }\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <Router>\n      <AuthContext.Provider value={{ loading, setLoading, isSignedIn, setIsSignedIn, currentUser, setCurrentUser}}>\n        <CommonLayout>\n          <Switch>\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/signin\" component={SignIn} />\n            <Route exact path=\"/posts\" component={PostList} />\n            <Route exact path=\"/photos\" component={Photo} />\n            <Route exact path=\"/photo/post\" component={PhotoPost} />\n            <Route exact path=\"/photos/:id\" component={PhotoShow} />\n            <Route exact path=\"/movies\" component={Movie} />\n            <Route exact path=\"/movies/:id\" component={MovieShow} />\n            <Route exact path=\"/movie/post\" component={MoviePost} />\n            <Route exact path=\"/sounds\" component={Sound} />\n            <Route exact path=\"/sounds/:id\" component={SoundShow} />\n            <Route exact path=\"/sound/post\" component={SoundPost} />\n\n            <Route exact path=\"/top\" component={Top} />\n            <Private>\n              <Route exact path=\"/home\" component={Home} />\n            </Private>\n          </Switch>\n        </CommonLayout>\n        <Footer/>\n      </AuthContext.Provider>\n    </Router>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}